
package de.fhdo.terminologie.ws.administration;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Administration", targetNamespace = "http://administration.ws.terminologie.fhdo.de/")
@XmlSeeAlso({
    de.fhdo.terminologie.ws.administration.ObjectFactory.class,
    types.termserver.fhdo.de.ObjectFactory.class
})
public interface Administration {


    /**
     * 
     * @param parameter
     * @return
     *     returns de.fhdo.terminologie.ws.administration.CreateDomainResponse.Return
     */
    @WebMethod(operationName = "CreateDomain")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CreateDomain", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.CreateDomain")
    @ResponseWrapper(localName = "CreateDomainResponse", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.CreateDomainResponse")
    @Action(input = "http://administration.ws.terminologie.fhdo.de/Administration/CreateDomainRequest", output = "http://administration.ws.terminologie.fhdo.de/Administration/CreateDomainResponse")
    public de.fhdo.terminologie.ws.administration.CreateDomainResponse.Return createDomain(
        @WebParam(name = "parameter", targetNamespace = "")
        CreateDomainRequestType parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns de.fhdo.terminologie.ws.administration.MaintainDomainResponse.Return
     */
    @WebMethod(operationName = "MaintainDomain")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "MaintainDomain", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.MaintainDomain")
    @ResponseWrapper(localName = "MaintainDomainResponse", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.MaintainDomainResponse")
    @Action(input = "http://administration.ws.terminologie.fhdo.de/Administration/MaintainDomainRequest", output = "http://administration.ws.terminologie.fhdo.de/Administration/MaintainDomainResponse")
    public de.fhdo.terminologie.ws.administration.MaintainDomainResponse.Return maintainDomain(
        @WebParam(name = "parameter", targetNamespace = "")
        MaintainDomainRequestType parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns de.fhdo.terminologie.ws.administration.ImportCodeSystemResponse.Return
     */
    @WebMethod(operationName = "ImportCodeSystem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ImportCodeSystem", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ImportCodeSystem")
    @ResponseWrapper(localName = "ImportCodeSystemResponse", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ImportCodeSystemResponse")
    @Action(input = "http://administration.ws.terminologie.fhdo.de/Administration/ImportCodeSystemRequest", output = "http://administration.ws.terminologie.fhdo.de/Administration/ImportCodeSystemResponse")
    public de.fhdo.terminologie.ws.administration.ImportCodeSystemResponse.Return importCodeSystem(
        @WebParam(name = "parameter", targetNamespace = "")
        ImportCodeSystemRequestType parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns de.fhdo.terminologie.ws.administration.ImportCodeSystemStatusResponse.Return
     */
    @WebMethod(operationName = "ImportCodeSystemStatus")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ImportCodeSystemStatus", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ImportCodeSystemStatus")
    @ResponseWrapper(localName = "ImportCodeSystemStatusResponse", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ImportCodeSystemStatusResponse")
    @Action(input = "http://administration.ws.terminologie.fhdo.de/Administration/ImportCodeSystemStatusRequest", output = "http://administration.ws.terminologie.fhdo.de/Administration/ImportCodeSystemStatusResponse")
    public de.fhdo.terminologie.ws.administration.ImportCodeSystemStatusResponse.Return importCodeSystemStatus(
        @WebParam(name = "parameter", targetNamespace = "")
        ImportCodeSystemStatusRequestType parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns de.fhdo.terminologie.ws.administration.ExportCodeSystemContentResponse.Return
     */
    @WebMethod(operationName = "ExportCodeSystemContent")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ExportCodeSystemContent", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ExportCodeSystemContent")
    @ResponseWrapper(localName = "ExportCodeSystemContentResponse", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ExportCodeSystemContentResponse")
    @Action(input = "http://administration.ws.terminologie.fhdo.de/Administration/ExportCodeSystemContentRequest", output = "http://administration.ws.terminologie.fhdo.de/Administration/ExportCodeSystemContentResponse")
    public de.fhdo.terminologie.ws.administration.ExportCodeSystemContentResponse.Return exportCodeSystemContent(
        @WebParam(name = "parameter", targetNamespace = "")
        ExportCodeSystemContentRequestType parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns de.fhdo.terminologie.ws.administration.ExportValueSetContentResponse.Return
     */
    @WebMethod(operationName = "ExportValueSetContent")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ExportValueSetContent", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ExportValueSetContent")
    @ResponseWrapper(localName = "ExportValueSetContentResponse", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ExportValueSetContentResponse")
    @Action(input = "http://administration.ws.terminologie.fhdo.de/Administration/ExportValueSetContentRequest", output = "http://administration.ws.terminologie.fhdo.de/Administration/ExportValueSetContentResponse")
    public de.fhdo.terminologie.ws.administration.ExportValueSetContentResponse.Return exportValueSetContent(
        @WebParam(name = "parameter", targetNamespace = "")
        ExportValueSetContentRequestType parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns de.fhdo.terminologie.ws.administration.ImportCodeSystemCancelResponseType
     */
    @WebMethod(operationName = "ImportCodeSystemCancel")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ImportCodeSystemCancel", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ImportCodeSystemCancel")
    @ResponseWrapper(localName = "ImportCodeSystemCancelResponse", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ImportCodeSystemCancelResponse")
    @Action(input = "http://administration.ws.terminologie.fhdo.de/Administration/ImportCodeSystemCancelRequest", output = "http://administration.ws.terminologie.fhdo.de/Administration/ImportCodeSystemCancelResponse")
    public ImportCodeSystemCancelResponseType importCodeSystemCancel(
        @WebParam(name = "parameter", targetNamespace = "")
        ImportCodeSystemCancelRequestType parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns de.fhdo.terminologie.ws.administration.ImportValueSetResponse.Return
     */
    @WebMethod(operationName = "ImportValueSet")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ImportValueSet", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ImportValueSet")
    @ResponseWrapper(localName = "ImportValueSetResponse", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ImportValueSetResponse")
    @Action(input = "http://administration.ws.terminologie.fhdo.de/Administration/ImportValueSetRequest", output = "http://administration.ws.terminologie.fhdo.de/Administration/ImportValueSetResponse")
    public de.fhdo.terminologie.ws.administration.ImportValueSetResponse.Return importValueSet(
        @WebParam(name = "parameter", targetNamespace = "")
        ImportValueSetRequestType parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns de.fhdo.terminologie.ws.administration.ActualProceedingsResponseType
     */
    @WebMethod(operationName = "ActualProceedings")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ActualProceedings", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ActualProceedings")
    @ResponseWrapper(localName = "ActualProceedingsResponse", targetNamespace = "http://administration.ws.terminologie.fhdo.de/", className = "de.fhdo.terminologie.ws.administration.ActualProceedingsResponse")
    @Action(input = "http://administration.ws.terminologie.fhdo.de/Administration/ActualProceedingsRequest", output = "http://administration.ws.terminologie.fhdo.de/Administration/ActualProceedingsResponse")
    public ActualProceedingsResponseType actualProceedings(
        @WebParam(name = "parameter", targetNamespace = "")
        ActualProceedingsRequestType parameter);

}
