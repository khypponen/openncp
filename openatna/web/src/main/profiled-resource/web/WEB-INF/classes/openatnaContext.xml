<?xml version="1.0" encoding="UTF-8"?>

<!--


*****************************************************************************************************
*                                                             										*
* NOTE: This file is an example, as opposed to a working copy,                   					*
* until the logMessageClass property in the serviceConfig bean                                 		*
* has been set, i.e. the place holder variable log.message.class            				        *
* surrounded by @ symbols has been replaced															*
*                                                                       							*
*****************************************************************************************************



-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
       default-lazy-init="true">

    <bean id="propertyConfigurer" class="org.openhealthtools.openatna.audit.OpenAtnaPropertiesLoader">
        <property name="location">
            <value>${openATNA.properties.path}</value>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true" />
    </bean>

    <!-- =============================================================================== -->
    <!-- ========================== Audit Service Configuration ======================== -->
    <!-- =============================================================================== -->

    <bean id="persistencePolicies" class="org.openhealthtools.openatna.audit.persistence.PersistencePolicies">
        <property name="allowNewNetworkAccessPoints" value="true"/>
        <property name="allowNewParticipants" value="true"/>
        <property name="allowNewObjects" value="true"/>
        <property name="allowNewSources" value="true"/>
        <property name="allowUnknownDetailTypes" value="true"/>
        <property name="allowNewCodes" value="true"/>
        <property name="persistErrors" value="true"/>
    </bean>

    <bean id="serviceConfig" class="org.openhealthtools.openatna.audit.service.ServiceConfiguration">
        <property name="persistencePolicies" ref="persistencePolicies"/>
        <!--

        *******************************************************************
        NOTE: Make sure the value of logMessageClass is not a place holder.
        *******************************************************************

        -->
        <property name="logMessageClass" value="org.openhealthtools.openatna.all.JaxbLogMessage"/>

        <!--<property name="validationProcessor" value="false"/>-->
        <!--
        Example atna processors
        -->
        <!--
        <property name="preVerifyProcessors">
            <list>
                <value>org.openhealthtools.openatna.ext.processors.SimpleProcessor</value>
            </list>
        </property>
        <property name="postVerifyProcessors">
            <list>
                <value>org.openhealthtools.openatna.ext.processors.SimpleProcessor</value>
            </list>
        </property>
        <property name="postPersistProcessors">
            <list>
                <value>org.openhealthtools.openatna.ext.processors.SimpleProcessor</value>
            </list>
        </property>
        -->
        <!-- example custom code file urls-->
        <!--
        <property name="codeUrls">
            <set>
                <value>file:/Users/bob/codes/mycodes.xml</value>
                <value>http://www.server.com/codes/theircodes.xml</value>
            </set>
        </property>
        -->
    </bean>

    <bean id="serverConfig" class="org.openhealthtools.openatna.audit.server.ServerConfiguration">
        <property name="actorDir" value="${ihe.actors.dir}"/>
        <property name="actorFile" value="${ihe.actors.file}"/>
    </bean>


    <bean id="auditService" class="org.openhealthtools.openatna.audit.service.AuditServiceImpl">
        <property name="serviceConfig" ref="serviceConfig"/>
        <property name="serverConfig" ref="serverConfig"/>
    </bean>


    <!-- =============================================================================== -->
    <!-- ============================ Persistence Configuration ======================== -->
    <!-- =============================================================================== -->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver.class}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <!-- Hibernate SessionFactory
    NOTE: after_transaction connection release mode. Could this be a problem in certain environments?
    -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:openatna-hibernate.cfg.xml"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hib.dialect}</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.hbm2ddl.auto">${hib.hbm2ddl.auto}</prop>
                <prop key="hibernate.connection.release_mode">after_transaction</prop>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven/>

    <!-- =============================================================================== -->
    <!-- ===================================== DAO Beans =============================== -->
    <!-- =============================================================================== -->

    <bean id="codeDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateCodeDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="participantDao"
          class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateParticipantDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="networkAccessPointDao"
          class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateNetworkAccessPointDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="objectDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateObjectDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="sourceDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateSourceDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="messageDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateMessageDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="entityDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateEntityDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="provisionalDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateProvisionalDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="errorDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateErrorDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>
    <bean id="queryDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateQueryDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="auditLoggerPluginManager" class="org.openhealthtools.openatna.all.logging.AuditLoggerPluginManagerImpl" init-method="start" destroy-method="destroy" 
    	lazy-init="false" scope="singleton">
    	<property name="loggers" value="${openATNA.auditLoggers}"/>
    </bean>
</beans>
